buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
    maven {
        name 'CB Maven FS'
        url "http://chickenbones.net/maven/"
    }
    maven {
        name 'ForgeFS'
        url 'http://files.minecraftforge.net/maven'
    }
}

apply plugin: 'forge'
sourceCompatibility = 1.7
targetCompatibility = 1.7

// Define properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // Load config. It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.minecraft_version}-${config.mod_version}"
group = "com.nauktis.solarflux"
archivesBaseName = "SolarFlux"

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    runDir = 'run'

    // Replacing stuff in the source
    replace '@VERSION@', project.version
}

dependencies {
    compile "codechicken:CodeChickenLib:${config.minecraft_version}-${config.codechickenlib_version}:dev"
    compile "codechicken:CodeChickenCore:${config.minecraft_version}-${config.codechickencore_version}:dev"
    compile "codechicken:ForgeMultipart:${config.minecraft_version}-${config.forgemultipart_version}:dev"
    compile "codechicken:NotEnoughItems:${config.minecraft_version}-${config.notenoughitems_version}:dev"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

idea { module { inheritOutputDirs = true } }
